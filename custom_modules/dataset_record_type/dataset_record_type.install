<?php

if(!defined('DATASET_RECORD_TYPE_DEFAULT')){define('DATASET_RECORD_TYPE_DEFAULT', 'Data Repository');}
if(!defined('DATASET_RECORD_TYPE_INTERNAL')){define('DATASET_RECORD_TYPE_INTERNAL', 'Internal Use');}
if(!defined('DATASET_RECORD_TYPE_ARCHIVE')){define('DATASET_RECORD_TYPE_ARCHIVE', 'Archive');}

function dataset_record_type_install(){
  $vocab = taxonomy_vocabulary_machine_name_load('dataset_record_types');
  if(!isset($vocab->vid)){
    $type_vocab = (object)array(
      'name'	=> 'Dataset Record Types',
      'description' => 'Used to denote dataset type and availability.',
      'machine_name'	=> 'dataset_record_types',
    );

    taxonomy_vocabulary_save($type_vocab);
  }

  $field_name = 'field_causes_validation';
  if(!field_info_field($field_name)){
    $field = array(
      'active' => 1,
      'cardinality' => 1,
      'deleted' => 0,
      'entity_types' => array(),
      'field_name' => $field_name,
      'field_permissions' => array(
        'type' => 0,
      ),
      'indexes' => array(
        'value' => array(
          0 => 'value',
        ),
      ),
      'locked' => 0,
      'module' => 'list',
      'settings' => array(
        'allowed_values' => array(
          0 => '',
          1 => '',
        ),
        'allowed_values_function' => '',
        'profile2_private' => FALSE,
      ),
      'translatable' => 0,
      'type' => 'list_boolean',
    );
    field_create_field($field);

    $instance = array(
      'bundle' => 'dataset_record_types',
      'default_value' => array(
        0 => array(
          'value' => 0,
        ),
      ),
      'deleted' => 0,
      'description' => 'Determines whether or not datasets of this type have default validation enabled.',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'list',
          'settings' => array(
            'empty_fields_emptyfieldtext_empty_text' => '',
            'empty_fields_handler' => '',
          ),
          'type' => 'list_default',
          'weight' => 2,
        ),
      ),
      'entity_type' => 'taxonomy_term',
      'field_name' => $field_name,
      'label' => 'Causes Validation',
      'required' => 0,
      'settings' => array(
        'required_by_role' => array(
          1 => 0,
          3 => 0,
          4 => 0,
          5 => 0,
          6 => 0,
          7 => 0,
          8 => 0,
          9 => 0,
          10 => 0,
        ),
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'options',
        'settings' => array(
          'display_label' => 1,
        ),
        'type' => 'options_onoff',
        'weight' => 4,
      ),
    );
    field_create_instance($instance);
  }

  $field_name = 'field_term_css_classes';
  if(!field_info_field($field_name)){
    $field = array(
      'active' => 1,
      'cardinality' => 1,
      'deleted' => 0,
      'entity_types' => array(),
      'field_name' => $field_name,
      'field_permissions' => array(
        'type' => 0,
      ),
      'indexes' => array(
        'format' => array(
          0 => 'format',
        ),
      ),
      'locked' => 0,
      'module' => 'text',
      'settings' => array(
        'max_length' => 255,
        'profile2_private' => FALSE,
      ),
      'translatable' => 0,
      'type' => 'text',
    );
    field_create_field($field);

    $instance = array(
      'bundle' => 'dataset_record_types',
      'default_value' => NULL,
      'deleted' => 0,
      'description' => 'Comma-separated list of additional CSS classes to apply to this term when viewed via the Dataset node display template.',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'text',
          'settings' => array(
            'empty_fields_emptyfieldtext_empty_text' => '',
            'empty_fields_handler' => '',
          ),
          'type' => 'text_default',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'taxonomy_term',
      'field_name' => 'field_term_css_classes',
      'label' => 'CSS Classes',
      'required' => 0,
      'settings' => array(
        'required_by_role' => array(
          1 => 0,
          3 => 0,
          4 => 0,
          5 => 0,
          6 => 0,
          7 => 0,
          8 => 0,
          9 => 0,
          10 => 0,
        ),
        'text_processing' => 0,
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'size' => 60,
        ),
        'type' => 'text_textfield',
        'weight' => 1,
      ),
    );
    field_create_instance($instance);
  }

  $field_name = 'field_icon_class';
  if(!field_info_field($field_name)){
    $field = array(
      'active' => 1,
      'cardinality' => 1,
      'deleted' => 0,
      'entity_types' => array(),
      'field_name' => $field_name,
      'field_permissions' => array(
        'type' => 0,
      ),
      'indexes' => array(
        'format' => array(
          0 => 'format',
        ),
      ),
      'locked' => 0,
      'module' => 'text',
      'settings' => array(
        'max_length' => 255,
        'profile2_private' => FALSE,
      ),
      'translatable' => 0,
      'type' => 'text',
    );
    field_create_field($field);

    $instance = array(
      'bundle' => 'dataset_record_types',
      'default_value' => NULL,
      'deleted' => 0,
      'description' => 'Class(es) to be inserted into icon element for term display via the Dataset node template. If present, term display elements will be prefixed with this icon.',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'text',
          'settings' => array(
            'empty_fields_emptyfieldtext_empty_text' => '',
            'empty_fields_handler' => '',
          ),
          'type' => 'text_default',
          'weight' => 1,
        ),
      ),
      'entity_type' => 'taxonomy_term',
      'field_name' => 'field_icon_class',
      'label' => 'Icon Class',
      'required' => 0,
      'settings' => array(
        'required_by_role' => array(
          1 => 0,
          3 => 0,
          4 => 0,
          5 => 0,
          6 => 0,
          7 => 0,
          8 => 0,
          9 => 0,
          10 => 0,
        ),
        'text_processing' => 0,
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'size' => 60,
        ),
        'type' => 'text_textfield',
        'weight' => 2,
      ),
    );
    field_create_instance($instance);
  }
  $vocab = taxonomy_vocabulary_machine_name_load('dataset_record_types');

  $term = taxonomy_get_term_by_name(DATASET_RECORD_TYPE_DEFAULT, 'dataset_record_types');
  if(empty($term)){
    $term_obj = (object)array(
      'name' => DATASET_RECORD_TYPE_DEFAULT,
      'description' => 'Records that will eventually be submitted to an external data repository.',
      'vid' => $vocab->vid,
    );

    taxonomy_term_save($term_obj);
  }
  $term = taxonomy_get_term_by_name(DATASET_RECORD_TYPE_INTERNAL, 'dataset_record_types');
  if(empty($term)){
    $term_obj = (object)array(
      'name' => DATASET_RECORD_TYPE_INTERNAL,
      'description' => 'Records used and shared internally within your organization.',
      'vid' => $vocab->vid,
    );

    taxonomy_term_save($term_obj);
  }
  $term = taxonomy_get_term_by_name(DATASET_RECORD_TYPE_ARCHIVE, 'dataset_record_types');
  if(empty($term)){
    $term_obj = (object)array(
      'name' => DATASET_RECORD_TYPE_ARCHIVE,
      'description' => 'Archive records have been marked for deletion in an external data repository but are archived locally.',
      'vid' => $vocab->vid,
    );

    taxonomy_term_save($term_obj);
  }

}

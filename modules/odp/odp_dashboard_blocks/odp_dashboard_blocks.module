<?php

/**
* Implements hook_block_info().
*/
function odp_dashboard_blocks_block_info(){
  $blocks = array();

  $blocks['content_type_nav'] = array(
    'info' => t('Nav actions per content type'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['dataset_nav'] = array(
    'info' => t('Content Type Nav - Dataset'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['publication_nav'] = array(
    'info' => t('Content Type Nav - Publication'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['contribution_nav'] = array(
    'info' => t('Content Type Nav - Contribution'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['expedition_nav'] = array(
    'info' => t('Content Type Nav - Expedition'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['content_type_actions'] = array(
    'info' => t('Node-specific actions per content type'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['dataset_action_items'] = array(
    'info' => t('Dataset Action Items'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['pi_action_items'] = array(
    'info' => t('PI Action Items'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['dm_action_items'] = array(
    'info' => t('Data Manager Action Items'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['all_action_items'] = array(
    'info' => t('All Action Items'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
* Implements hook_block_view()
*/
function odp_dashboard_blocks_block_view($delta = ''){
  $block = array();

  switch($delta){
    case 'dataset_nav':
      $block['content'] = odp_dashboard_blocks_dataset_nav_block();
      break;
    case 'publication_nav':
      $block['content'] = odp_dashboard_blocks_publication_nav_block();
      break;
    case 'contribution_nav':
      $block['content'] = odp_dashboard_blocks_contribution_nav_block();
      break;
    case 'expedition_nav':
      $block['content'] = odp_dashboard_blocks_expedition_nav_block();
      break;
    case 'content_type_nav':
      $block['content'] = '';
      break;
    case 'content_type_actions':
      $block['content'] = odp_dashboard_blocks_content_type_actions_block();
      break;
    case 'dataset_action_items':
      $block['content'] = odp_dashboard_blocks_dataset_action_items_block();
      break;
    case 'dataset_workflow_history':
      $block['content'] = odp_dashboard_blocks_dataset_workflow_history_block();
      break;
    case 'pi_action_items':
      $block['content'] = odp_dashboard_blocks_pi_action_items_block();
      break;
    case 'dm_action_items':
      $block['content'] = odp_dashboard_blocks_dm_action_items_block();
      break;
    case 'all_action_items':
      $block['content'] = odp_dashboard_blocks_all_action_items_block();
      break;
  }

  return $block;
}

function odp_dashboard_blocks_block_wrapper(){
  $content = array();
  $content['wrapper'] = array(
    '#prefix' => '<div class="pnl-actions pnl-content-type-actions">',
    '#suffix' => '</div>',
  );

  $content['wrapper']['list'] = array(
    '#prefix' => '<ul class="action-items">',
    '#suffix' => '</ul>',
  );
  return $content;
}

function odp_dashboard_blocks_dataset_nav_block(){
  $content = array();
  if(user_access('create dataset content')){
    $content = odp_dashboard_blocks_block_wrapper();

    $content['wrapper']['list']['action_dashboard'] = array(
      '#prefix' => '<li class="action-item action-dashboard">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/dashboard"><i class="fa fa-dashboard"></i>&nbsp;My Dashboard</a>',
    );

    $content['wrapper']['list']['action_my_datasets'] = array(
      '#prefix' => '<li class="action-item action-my-datasets">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/data/my"><i class="fa fa-user"></i>&nbsp;My Datasets</a>',
    );

    $content['wrapper']['list']['action_all_datasets'] = array(
      '#prefix' => '<li class="action-item action-all-datasets">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/data/all"><i class="fa fa-users"></i>&nbsp;All Datasets</a>',
    );

    $content['wrapper']['list']['action_action_items'] = array(
      '#prefix' => '<li class="action-item action-parent action-dataset-action-items">' .
        '<a href="/data/action-items"><i class="fa fa-check-square-o"></i>&nbsp;Action Items</a>' .
        '<ul class="action-parent">',
      '#suffix' => '</ul></li>',
    );

    $content['wrapper']['list']['action_action_items']['identify'] = array(
      '#prefix' => '<li class="action-item action-identify">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/data/action-items/identify"><i class="fa fa-circle-o"></i>&nbsp;Identify</a>',
    );

    $content['wrapper']['list']['action_action_items']['metadata'] = array(
      '#prefix' => '<li class="action-item action-metadata">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/data/action-items/metadata"><i class="fa fa-circle-o"></i>&nbsp;Metadata</a>',
    );

    $content['wrapper']['list']['action_action_items']['data'] = array(
      '#prefix' => '<li class="action-item action-data">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/data/action-items/data"><i class="fa fa-circle-o"></i>&nbsp;Data</a>',
    );

    $content['wrapper']['list']['action_action_items']['repository'] = array(
      '#prefix' => '<li class="action-item action-repository">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/data/action-items/repository"><i class="fa fa-circle-o"></i>&nbsp;Repository</a>',
    );

    $content['wrapper']['list']['action_action_items']['availability'] = array(
      '#prefix' => '<li class="action-item action-availability">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/data/action-items/availability"><i class="fa fa-circle-o"></i>&nbsp;Availability</a>',
    );

    $content['wrapper']['list']['action_my_templates'] = array(
      '#prefix' => '<li class="action-item action-my-templates">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/data/my/templates"><i class="fa fa-copy"></i>&nbsp;My Dataset Templates</a>',
    );

    $content['wrapper']['list']['action_add_dataset'] = array(
      '#prefix' => '<li class="action-item action-add-content">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/node/add/dataset"><i class="fa fa-file-o"></i>&nbsp;Add New Dataset</a>',
    );
  }

  return $content;
}

function odp_dashboard_blocks_publication_nav_block(){
  $content = array();
  if(user_access('create dataset content')){
    $content = odp_dashboard_blocks_block_wrapper();

    $content['wrapper']['list']['action_dashboard'] = array(
      '#prefix' => '<li class="action-item action-dashboard">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/dashboard"><i class="fa fa-dashboard"></i>&nbsp;My Dashboard</a>',
    );

    $content['wrapper']['list']['action_my_publications'] = array(
      '#prefix' => '<li class="action-item action-my-publications">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/publication/my"><i class="fa fa-user"></i>&nbsp;My Publications</a>',
    );

    $content['wrapper']['list']['action_all_publications'] = array(
      '#prefix' => '<li class="action-item action-all-publications">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/publication/all"><i class="fa fa-users"></i>&nbsp;All Publications</a>',
    );

    $content['wrapper']['list']['action_add_publication'] = array(
      '#prefix' => '<li class="action-item action-add-content">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/node/add/publications"><i class="fa fa-book"></i>&nbsp;Add New Publication</a>',
    );
  }

  return $content;
}

function odp_dashboard_blocks_contribution_nav_block(){
  $content = array();
  if(user_access('create dataset content')){
    $content = odp_dashboard_blocks_block_wrapper();

    $content['wrapper']['list']['action_dashboard'] = array(
      '#prefix' => '<li class="action-item action-dashboard">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/dashboard"><i class="fa fa-dashboard"></i>&nbsp;My Dashboard</a>',
    );
    $content['wrapper']['list']['action_quarterly_report'] = array(
      '#prefix' => '<li class="action-item action-report">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/reports/quarterly-report/"><i class="fa fa-pie-chart"></i>&nbsp;Current Quarter Reporting</a>',
    );

    $content['wrapper']['list']['action_all_contributions'] = array(
      '#prefix' => '<li class="action-item action-all">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/contribution/all"><i class="fa fa-users"></i>&nbsp;All Contributions</a>',
    );

    $content['wrapper']['list']['action_my_contributions'] = array(
      '#prefix' => '<li class="action-item action-my-contributions action-parent">' .
        '<a href="/contribution/my/all"><i class="fa fa-folder-open"></i>&nbsp;My Contributions</a>' .
        '<ul class="action-parent">',
      '#suffix' => '</ul></li>',
    );

    $content['wrapper']['list']['action_my_contributions']['action_my_presentations'] = array(
      '#prefix' => '<li class="action-item action-my-content">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/contribution/my/presentation"><i class="fa fa-line-chart"></i>&nbsp;My Presentations</a>',
    );

    $content['wrapper']['list']['action_my_contributions']['action_my_workshops'] = array(
      '#prefix' => '<li class="action-item action-my-content">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/contribution/my/workshop"><i class="fa fa-building"></i>&nbsp;My Workshops</a>',
    );

    $content['wrapper']['list']['action_my_contributions']['action_my_public_outreach'] = array(
      '#prefix' => '<li class="action-item action-my-content">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/contribution/my/public-outreach"><i class="fa fa-bullhorn"></i>&nbsp;My Public Outreach</a>',
    );

    $content['wrapper']['list']['action_my_contributions']['action_my_participants'] = array(
      '#prefix' => '<li class="action-item action-my-content">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/contribution/my/participant"><i class="fa fa-users"></i>&nbsp;My Participants</a>',
    );

    $content['wrapper']['list']['action_my_contributions']['action_my_students'] = array(
      '#prefix' => '<li class="action-item action-my-content">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/contribution/my/students"><i class="fa fa-graduation-cap"></i>&nbsp;My Students</a>',
    );

    $content['wrapper']['list']['action_add_items'] = array(
      '#prefix' => '<li class="action-item action-parent">' .
        '<a href="/node/add"><i class="fa fa-plus"></i>&nbsp;Add New Contribution</a>' .
        '<ul class="action-parent">',
      '#suffix' => '</ul></li>',
    );

    $content['wrapper']['list']['action_add_items']['action_add_presentation'] = array(
      '#prefix' => '<li class="action-item action-add-content">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/node/add/presentation"><i class="fa fa-line-chart"></i>&nbsp;Presentation</a>',
    );

    $content['wrapper']['list']['action_add_items']['action_add_workshop'] = array(
      '#prefix' => '<li class="action-item action-add-content">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/node/add/workshop"><i class="fa fa-building"></i>&nbsp;Workshop</a>',
    );

    $content['wrapper']['list']['action_add_items']['action_add_outreach'] = array(
      '#prefix' => '<li class="action-item action-add-content">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/node/add/public-outreach"><i class="fa fa-bullhorn"></i>&nbsp;Public Outreach</a>',
    );

    $content['wrapper']['list']['action_add_items']['action_add_student'] = array(
      '#prefix' => '<li class="action-item action-add-content">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/node/add/students"><i class="fa fa-graduation-cap"></i>&nbsp;Student</a>',
    );

    $content['wrapper']['list']['action_add_items']['action_add_participant'] = array(
      '#prefix' => '<li class="action-item action-add-content">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/node/add/participant"><i class="fa fa-user"></i>&nbsp;Participant</a>',
    );

  }
  return $content;
}

function odp_dashboard_blocks_expedition_nav_block(){
  $content = array();
  if(user_access('create dataset content')){
    $content = odp_dashboard_blocks_block_wrapper();

    $content['wrapper']['list']['action_dashboard'] = array(
      '#prefix' => '<li class="action-item action-dashboard">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/dashboard"><i class="fa fa-dashboard"></i>&nbsp;My Dashboard</a>',
    );

    $content['wrapper']['list']['action_next'] = array(
      '#prefix' => '<li class="action-item action-dashboard">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/dashboard/cruises/upcoming/my"><i class="fa fa-ship"></i>&nbsp;My Next Cruise</a>',
    );

    $content['wrapper']['list']['action_upcoming'] = array(
      '#prefix' => '<li class="action-item action-upcoming-expeditions">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/dashboard/cruises/upcoming"><i class="fa fa-reorder"></i>&nbsp;All Upcoming Cruises</a>',
    );

    $content['wrapper']['list']['action_all_publications'] = array(
      '#prefix' => '<li class="action-item action-all-publications">',
      '#suffix' => '</li>',
      '#markup' => '<a href="/dashboard/cruises/past"><i class="fa fa-history"></i>&nbsp;Past Cruises</a>',
    );

  }

  return $content;
}

function odp_dashboard_blocks_content_type_actions_block(){
  $node = menu_get_object();
  $content = array(
    'message' => array(
      '#type' => 'markup',
      '#markup' => 'no',
      '#suffix' => '',
    ),
  );

  return $content;
}

function odp_dashboard_blocks_get_all_changes($node, $limit = NULL){
  $states = array();

  // All of our workflows that we want to check
  $workflows = array(
    'field_identify_state',
    'field_metadata_state',
    'field_data_state',
    'field_availability_state',
    'field_repository_state',
    'field_dataset_workflow'
  );

  foreach($workflows as $workflow){
    $workflow_name = str_replace(array('field_', '_state'), '', $workflow);
    // Stupid hacky workaround to support old workflow field
    if($workflow_name == 'dataset_workflow'){$workflow_name .= 's';}
    $workflow_obj = workflow_helpers_get_workflow_object($workflow_name);

    $workflow_states = !empty($workflow_obj) ? workflow_helpers_get_workflow_states($workflow_obj->wid) : array();
    $state_objects = array();
    foreach($workflow_states as $state){
      $state_objects[$state->sid] = $state;
    }

    $results = db_query('SELECT hid, sid, old_sid, comment, field_name, stamp FROM {workflow_node_history} h ' .
      'WHERE nid = :nid ' .
      'AND field_name = :workflow_field ' .
      'ORDER BY stamp ASC',
      array(
        ':nid' => $node->nid,
        ':workflow_field' => $workflow,
      ))->fetchAll();
    foreach($results as $row){
      $hid = $row->hid;
      $comment = !empty($row->comment) ? $row->comment : '';
      $sid = $row->sid;
      $old_sid = $row->old_sid;
      $state_name = !empty($state_objects[$sid]) ? $state_objects[$sid]->state : '';
      $old_state_name = !empty($state_objects[$old_sid]) ? $state_objects[$old_sid]->state : '';
      $workflow_name = !empty($workflow_obj->label) ? $workflow_obj->label : '';
      $workflow_class = drupal_clean_css_identifier(strtolower($workflow_name));
      $state_class = drupal_clean_css_identifier(strtolower($state_name));
      $old_state_class = drupal_clean_css_identifier(strtolower($old_state_name));
      $timestamp = $row->stamp;


      $states[$hid] = array(
        'wid' => $workflow_obj->wid,
        'sid' => $sid,
        'old_sid' => $old_sid,
        'state_name' => $state_name,
        'old_state_name' => $old_state_name,
        'workflow_name' => $workflow_name,
        'comment' => $comment,
        'workflow_class' => $workflow_class,
        'state_class' => $state_class,
        'old_state_class' => $old_state_class,
        'timestamp' => $timestamp,
      );
    }
  }
  return $states;
}

function odp_dashboard_blocks_get_latest_changes($node, $uid = NULL, $type){
  if(empty($uid)){
    global $user;
    $uid = $user->uid;
  }
  $current_user = user_load($uid);

  $is_data_manager = user_access('override dataset edit', $current_user);
  $states = array();
  $allowed_states = array();

  if($type != 'all'){
    // PI action items
    if(!$is_data_manager){
      if($type == 'action_item'){
        $allowed_state_names = array(
          'need_metadata',
          'metadata_return',
          'need_data_files',
          'need_data_file_review_and_approval',
          'data_return',
          'data_listed_as_private',
        );
      }
      // PI alerts (no action required)
      if($type == 'alert'){
        $allowed_state_names = array(
          'udi_from_repo_assigned',
          'doi_assigned',
          'identify_complete',
          'metadata_complete',
          'data_complete',
          'data_listed_as_public',
        );
      }
    }
    else{
      // Data manager action items
      if($type == 'action_item'){
        $allowed_state_names = array(
          'request_a_udi_from_repo',
          'request_a_doi_from_repo',
          'metadata_supplied',
          'repo_return',
          'data_files_supplied',
          'data_files_approved_by_pi',
          'ready_for_submission',
          'submitted_to_repo',
          'list_data_as_public',
        );
      }
    }
  }

  // All of our workflows that we want to check
  $workflows = array(
    'field_identify_state',
    'field_metadata_state',
    'field_data_state',
    'field_availability_state',
    'field_repository_state'
  );

  // Get the current value of each workflow, and check to see if it is in the list of states we want to display
  foreach($workflows as $workflow){
    $workflow_name = str_replace(array('field_', '_state'), '', $workflow);
    $workflow_obj = workflow_helpers_get_workflow_object($workflow_name);

    $workflow_states = !empty($workflow_obj) ? workflow_helpers_get_workflow_states($workflow_obj->wid) : array();
    $state_objects = array();
    foreach($workflow_states as $state){
      if($type == 'all'){
        $allowed_states[] = $state->sid;
      }
      else{
        if(in_array($state->name, $allowed_state_names)){
          $allowed_states[] = $state->sid;
        }
      }
      $state_objects[$state->sid] = $state;
    }

    $values = field_get_items('node', $node, $workflow);
    $current_value = !empty($values[0]['value']) ? $values[0]['value'] : NULL;

    if(!empty($current_value) && in_array($current_value, $allowed_states)){

      $results = db_query('SELECT hid, sid, comment, field_name FROM {workflow_node_history} h ' .
        'WHERE nid = :nid ' .
        'AND field_name = :workflow_field ' .
        'AND sid = :current_value ' .
        'AND stamp = (SELECT MAX(stamp) FROM workflow_node_history WHERE nid = h.nid AND sid = h.sid)' .
        'ORDER BY h.hid DESC',
        array(
          ':nid' => $node->nid,
          ':workflow_field' => $workflow,
          ':current_value' => $current_value
        ))->fetchAll();
      foreach($results as $row){
        $hid = $row->hid;
        $comment = !empty($row->comment) ? $row->comment : '';
        $sid = $row->sid;
        $state_name = !empty($state_objects[$sid]) ? $state_objects[$sid]->state : '';
        $workflow_name = !empty($workflow_obj->label) ? $workflow_obj->label : '';
        $workflow_class = drupal_clean_css_identifier(strtolower($workflow_name));
        $state_class = drupal_clean_css_identifier(strtolower($state_name));


        $states[$hid] = array(
          'sid' => $sid,
          'state_name' => $state_name,
          'workflow_name' => $workflow_name,
          'comment' => $comment,
          'workflow_class' => $workflow_class,
          'state_class' => $state_class,
          'workflow_field' => $workflow,
        );
      }
    }
  }
  return $states;
}

function odp_dashboard_blocks_dataset_action_items_block($nid = NULL, $uid = NULL){
  $output = array();
  if(!empty($nid)){
    $node = node_load($nid);
  }
  if(!empty($node)){
    $states = odp_dashboard_blocks_get_latest_changes($node, $uid, 'action_item');

    foreach($states as $id => $state){
      $output[$id] = array(
        '#prefix' => '<div class="pnl-workflow-state">',
        '#suffix' => '</div>',
      );

      $output[$id]['workflow_name'] = array(
        '#prefix' => '<span class="workflow-name ' . $state['workflow_class'] . '">',
        '#suffix' => '</span>',
        '#markup' => $state['workflow_name'],
      );

      $output[$id]['state_name'] = array(
        '#prefix' => '<span class="state-name ' . $state['state_class'] . '">',
        '#suffix' => '</span>',
        '#markup' => $state['state_name'],
      );
    }
  }
  return $output;
}

function odp_dashboard_blocks_dataset_alerts_block($nid = NULL, $uid = NULL){
  $output = array();
  if(!empty($nid)){
    $node = node_load($nid);
  }
  if(!empty($node)){
    $states = odp_dashboard_blocks_get_latest_changes($node, $uid, 'alert');
    foreach($states as $id => $state){
      $output[$id] = array(
        '#prefix' => "<div class='pnl-workflow-state'>",
        '#suffix' => "</div>",
      );

      $output[$id]['workflow_name'] = array(
        '#prefix' => '<span class="workflow-name">',
        '#suffix' => '</span>',
        '#markup' => $state['workflow_name'],
      );

      $output[$id]['state_name'] = array(
        '#prefix' => '<span class="state-name">',
        '#suffix' => '</span>',
        '#markup' => $state['state_name'],
      );
    }
  }
  return $output;
}
function odp_dashboard_blocks_dataset_workflow_history_block($nid = NULL, $uid = NULL){
  $output = array();
  if(!empty($nid)){
    $node = node_load($nid);
  }
  if(!empty($node)){
    $states = odp_dashboard_blocks_get_all_changes($node);
    $header = array(
      'Date',
      'Old State',
      'New State',
      'Comment',
    );

    $tables = array();
    foreach($states as $id => $state){
      $tables[$state['wid']]['workflow_name'] = $state['workflow_name'];
      $tables[$state['wid']]['rows'][] = array(
        array('data' => format_date($state['timestamp'], 'custom', 'm/d/Y h:i a'), 'class' => 'field-date'),
        array('data' => $state['old_state_name'], 'class' => 'field-old-state-name ' . $state['old_state_class']),
        array('data' => $state['state_name'], 'class' => 'field-state-name ' . $state['state_class']),
        array('data' => $state['comment'], 'class' => 'field-comment'),
      );
    }
    foreach($tables as $key => $table){
      $output['table_' . $key] = array(
        '#markup' => theme(
          'table',
          array(
            'header' => $header,
            'rows' => $table['rows'],
            'caption' => $table['workflow_name'],
            'attributes' => array(
              'class' => array(
                'views-table',
                'table-workflow-history',
              ),
            ),
          )
        ),
      );
    }
  }
  return $output;
}

function odp_dashboard_blocks_all_action_items_block(){
  $workflow = NULL;

  $path = current_path();
  $path_arr = explode('/', $path);
  if(count($path_arr) == 3 && $path_arr[1] == 'action-items'){
    $workflow = $path_arr[2];
  }

  $output = array();
  $is_data_manager = user_access('override dataset edit');
  if($is_data_manager){
    $output = odp_dashboard_blocks_dm_action_items_block($limit = NULL, $workflow);
  }
  else{
    $output = odp_dashboard_blocks_pi_action_items_block($limit = NULL, $workflow);
  }
  return $output;
}

function odp_dashboard_blocks_pi_action_items_block($limit = 5, $workflow = NULL){
  if(empty($states)){
    $states = array(
      'need_metadata',
      'metadata_return',
      'need_data_files',
      'need_data_file_review_and_approval',
      'data_return',
      'data_listed_as_private',
    );
  }

  $nodes = workflow_helpers_get_nodes_with_state('dataset', $states);
  return odp_dashboard_blocks_build_action_item_table($nodes, $limit, $workflow);
}

function odp_dashboard_blocks_dm_action_items_block($limit = 5, $workflow = NULL){
  if(empty($states)){
    $states = array(
      'request_a_udi_from_repo',
      'request_a_doi_from_repo',
      'metadata_supplied',
      'repo_return',
      'data_files_supplied',
      'data_files_approved_by_pi',
      'ready_for_submission',
      'submitted_to_repo',
      'list_data_as_public',
    );
  }

  $nodes = workflow_helpers_get_nodes_with_state('dataset', $states);
  return odp_dashboard_blocks_build_action_item_table($nodes, $limit, $workflow);
}

function odp_dashboard_blocks_build_action_item_table($nodes, $limit = NULL, $workflow = NULL){
  ctools_include('modal');
  ctools_modal_add_js();

  global $user;
  $uid = $user->uid;

  $is_data_manager = user_access('override dataset edit', $user);

  $output = array();
  $table = array();
  $header = array(
    'Workflow',
    'State',
    'Record Title',
    '',
  );
  $total_rows = 0;
  foreach($nodes as $node){

    $contact = !empty($node->field_dataset_contact_person[LANGUAGE_NONE][0]['target_id']) ? $node->field_dataset_contact_person[LANGUAGE_NONE][0]['target_id'] : '';
    $md_contact = !empty($node->field_metadata_contact_person[LANGUAGE_NONE][0]['target_id']) ? $node->field_metadata_contact_person[LANGUAGE_NONE][0]['target_id'] : '';
    $contact_node = node_load($contact);
    $md_contact_node = node_load($md_contact);

    $contact_uid = !empty($contact_node) ? $contact_node->uid : '';
    $md_contact_uid = !empty($md_contact_node) ? $md_contact_node->uid : '';
    $owner_uid = $node->uid;

    if($is_data_manager || ($uid == $contact_uid || $uid == $md_contact_uid || $uid == $owner_uid)){
      $states = odp_dashboard_blocks_get_latest_changes($node, NULL, 'action_item');
      $title = $node->title;
      if(strlen($node->title) >= 50){
        $title = substr($title, 0, 50) . '...';
      }

      foreach($states as $id => $state){
        $total_rows++;
        if($workflow == NULL || strtolower($state['workflow_name']) == $workflow){
          if($limit == NULL || (count($table['rows']) < $limit)){
            if($workflow != NULL){
              $workflow_name = $state['workflow_name'];
            }
            else{
              $workflow_name = l($state['workflow_name'], '/data/action-items/' . strtolower($state['workflow_name']));
            }
            $wf_name = 'field_' . strtolower($state['workflow_name']) . '_state';
            $modal_link = '<div class="modal-link modal-link-workflow" data-nid="'. $node->nid .'" data-field="'. $wf_name .'">' . l(t("View"), '/node/' . $node->nid . '/workflow/history/' . $wf_name . '/nojs/5', array('attributes' => array('class' => 'ctools-use-modal lnk-modal btn'))) . '</div>';
            $table['rows'][] = array(
              array('data' => $workflow_name, 'class' => 'field-workflow-name'),
              array('data' => $state['state_name'], 'class' => 'field-state-name'),
              array('data' => l($title, '/node/' . $node->nid, array('attributes' => array('title' => $node->title))), 'class' => 'field-title'),
              //array('data' => $modal_link),
              array('data' => l('Edit', '/node/' . $node->nid . '/edit', array('attributes' => array('class' => 'btn'), 'query' => array('show_workflow' => $state['workflow_field'])))),

            );
          }
        }
      }
    }
  }
  if($limit != NULL){
    $output['panel_header'] = array(
      '#markup' => '<span class="panel-header"><a href="/data/action-items">Action Items</a></span>',
    );
  }

  if(count($table['rows']) > 0){
    $output['table'] = array(
      '#markup' => theme(
        'table',
        array(
          'header' => $header,
          'rows' => $table['rows'],
          'attributes' => array(
            'class' => array(
              'views-table',
              'table-action-items',
            ),
          ),
        )
      ),
    );

    if($limit != NULL && $total_rows > $limit){
      $output['footer'] = array(
        '#prefix' => '<em>',
        '#markup' => t('Showing the top ' . count($table['rows']) . ' items out of ' . $total_rows . ' total. Click on the "Action Items" link above to view the full list, or click the individual Workflow links to filter by Workflow.'),
        '#suffix' => '</em>',
      );
    }
  }
  else{
    $output['no_results'] = array(
      '#prefix' => '<div class="panel">',
      '#markup' => 'There aren\'t currently any action items requiring your attention.',
      '#suffix' => '</div>',
    );
  }

  return $output;
}

function odp_dashboard_blocks_term_page($term) {
      drupal_set_title($term->name);
      return taxonomy_term_view($term, 'full');
}

function odp_dashboard_blocks_node_view($node, $view_mode, $lang){
  //print render(odp_dashboard_blocks_dataset_workflow_history_block($node->nid));
}
